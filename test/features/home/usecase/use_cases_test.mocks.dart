// Mocks generated by Mockito 5.1.0 from annotations
// in sua_musica_teste/test/features/home/usecase/use_cases_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sua_musica_teste/features/home/domain/services/home_services.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [HomeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeService extends _i1.Mock implements _i2.HomeService {
  MockHomeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<Map<String, dynamic>>> getAllPlataforms() =>
      (super.noSuchMethod(Invocation.method(#getAllPlataforms, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i3.Future<List<Map<String, dynamic>>>);
  @override
  _i3.Future<List<Map<String, dynamic>>> getGamesByPlataforms(
          {int? idPlataforms}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getGamesByPlataforms, [], {#idPlataforms: idPlataforms}),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i3.Future<List<Map<String, dynamic>>>);
  @override
  _i3.Future<List<Map<String, dynamic>>> getScreenshotByGame(
          {int? idScreenshot}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getScreenshotByGame, [], {#idScreenshot: idScreenshot}),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i3.Future<List<Map<String, dynamic>>>);
  @override
  _i3.Future<void> saveImageInCache({int? id, String? urlImage}) =>
      (super.noSuchMethod(
          Invocation.method(
              #saveImageInCache, [], {#id: id, #urlImage: urlImage}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
